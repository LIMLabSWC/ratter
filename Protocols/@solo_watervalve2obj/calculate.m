function [] = calculate(obj, side)
   
   GetSoloFunctionArgs;
   
   if nargin<2, side == 'both'; end;
      
   if ismember(side, {'right', 'both'})
      if right_time==0 | right_weight==0,
         set(get_ghandle(right_target), 'BackgroundColor', [1 1 1]);
         right_dispense.value = 0;
      else
         right_dispense.value = 1000*right_weight/num_pulses;
         if abs(log(right_dispense/right_target)) <= abs(log(1+error_tol/100)),
            set(get_ghandle(right_target), 'BackgroundColor', [0.3 1 0.3]);
         else
            set(get_ghandle(right_target), 'BackgroundColor', [1 0.3 0.3]);
         end;
   
         newtable = add_entry(table, ' ', 'right1water', value(right_time), ...
             value(right_dispense));
         [sugg, errid, message] = interpolate_value(newtable, ...
                'right1water', value(right_target), ...
                'maxdistance', Inf); %     first time, use default maxdays_...
         if isnan(sugg), % Try again looking within 30 days
            [sugg, errid, message] = interpolate_value(newtable, ...
                'right1water', value(right_target), ...
                'maxdistance', Inf, ...
                'maxdays_warning', 25, ...
                'maxdays_error', 30);
            if isnan(sugg), error(message); end;
         end;
         right_suggest.value = round(sugg*1000)/1000;
      end;
   end;
   
   % -------
   
   if ismember(side, {'left', 'both'}),
      if left_time==0 | left_weight==0,
         set(get_ghandle(left_target), 'BackgroundColor', [1 1 1]);
         left_dispense.value  = 0;
      else
         left_dispense.value  = 1000*left_weight/num_pulses;
         if abs(log(left_dispense/left_target)) <= abs(log(1+error_tol/100)),
            set(get_ghandle(left_target), 'BackgroundColor', [0.3 1 0.3]);
         else
            set(get_ghandle(left_target), 'BackgroundColor', [1 0.3 0.3]);
         end;
   
         newtable = add_entry(table, ' ', 'left1water', value(left_time), ...
             value(left_dispense));
         [sugg, errid, message] = interpolate_value(newtable, ...
                'left1water', value(left_target), ...
                'maxdistance', Inf); %     first time, use default maxdays_...
         if isnan(sugg), % Try again looking within 30 days
            [sugg, errid, message] = ...
                interpolate_value(newtable, 'left1water', ...
                                  value(left_target),'maxdistance', ...
                                  Inf, 'maxdays', 30);
            if isnan(sugg), error(message); end;
         end;
         left_suggest.value = round(sugg*1000)/1000;
      end;
   end;
   
   % --------
   
   if strcmp(side, 'generate'),
      [sugg, errid, message] = ...
          interpolate_value(table, ...
          'left1water', value(left_target), ...
          'maxdistance', Inf); %     first time, use default maxdays_...
      if isnan(sugg), % Try again looking within 30 days
         [sugg, errid, message] = interpolate_value(table, ...
             'left1water', value(left_target), ...
             'maxdistance', Inf, ...
             'maxdays_warning', 25, ...
             'maxdays_error', 30);
         if isnan(sugg), error(message); end;
      end;
      left_suggest.value = round(sugg*1000)/1000;
   
      [sugg, errid, message] = interpolate_value(table, ...
          'right1water', value(right_target), ...
          'maxdistance', Inf); %     first time, use default maxdays_...
      if isnan(sugg), % Try again looking within 30 days
         [sugg, errid, message] = ...
             interpolate_value(table, ...
             'right1water', value(right_target), ...
             'maxdistance', Inf, ...
             'maxdays_warning', 25, ...
             'maxdays_error', 30);
         if isnan(sugg), error(message); end;
      end;
      right_suggest.value = round(sugg*1000)/1000;
   end;